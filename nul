	.file	"funciones_flymake.c"
	.text
	.globl	cola_inic
	.type	cola_inic, @function
cola_inic:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movl	$24, %edi
	call	malloc
	movq	%rax, %rdx
	movq	-8(%rbp), %rax
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	$0, (%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	$0, 8(%rax)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movl	$0, 16(%rax)
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	cola_inic, .-cola_inic
	.globl	estaVacio
	.type	estaVacio, @function
estaVacio:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	16(%rax), %eax
	testl	%eax, %eax
	jne	.L3
	movl	$1, %eax
	jmp	.L4
.L3:
	movl	$0, %eax
.L4:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	estaVacio, .-estaVacio
	.globl	encolar
	.type	encolar, @function
encolar:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movl	$16, %edi
	call	malloc
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	-32(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	-8(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-24(%rbp), %rax
	movl	16(%rax), %eax
	testl	%eax, %eax
	jne	.L6
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, 8(%rax)
	jmp	.L7
.L6:
	movq	-24(%rbp), %rax
	movq	8(%rax), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, 8(%rax)
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, 8(%rax)
.L7:
	movq	-24(%rbp), %rax
	movl	16(%rax), %eax
	leal	1(%rax), %edx
	movq	-24(%rbp), %rax
	movl	%edx, 16(%rax)
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	encolar, .-encolar
	.globl	desencolar
	.type	desencolar, @function
desencolar:
.LFB3:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movl	16(%rax), %eax
	testl	%eax, %eax
	je	.L9
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -8(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rdi
	call	free
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rdx
	movq	%rdx, (%rax)
	movq	-24(%rbp), %rax
	movl	16(%rax), %eax
	leal	-1(%rax), %edx
	movq	-24(%rbp), %rax
	movl	%edx, 16(%rax)
	movq	-16(%rbp), %rax
	jmp	.L10
.L9:
	movl	$0, %eax
.L10:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	desencolar, .-desencolar
	.globl	cola_finic
	.type	cola_finic, @function
cola_finic:
.LFB4:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, %rdi
	call	free
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	cola_finic, .-cola_finic
	.section	.rodata
.LC0:
	.string	"  "
	.text
	.globl	impEsp
	.type	impEsp, @function
impEsp:
.LFB5:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	$0, -4(%rbp)
	jmp	.L13
.L14:
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	addl	$1, -4(%rbp)
.L13:
	movl	-4(%rbp), %eax
	cmpl	-20(%rbp), %eax
	jl	.L14
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE5:
	.size	impEsp, .-impEsp
	.section	.rodata
.LC1:
	.string	"Directorio: %s\n"
	.align 8
.LC2:
	.string	"Numero de archivos normales: %d\n"
.LC3:
	.string	"Numero de directorios: %d\n"
	.text
	.globl	impDir
	.type	impDir, @function
impDir:
.LFB6:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movl	-20(%rbp), %eax
	movl	%eax, %edi
	call	impEsp
	movq	-8(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
	movl	-20(%rbp), %eax
	movl	%eax, %edi
	call	impEsp
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC2, %edi
	movl	$0, %eax
	call	printf
	movl	-20(%rbp), %eax
	movl	%eax, %edi
	call	impEsp
	movl	-16(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC3, %edi
	movl	$0, %eax
	call	printf
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE6:
	.size	impDir, .-impDir
	.section	.rodata
	.align 8
.LC4:
	.string	"*No puedo abrir el directorio!!"
.LC5:
	.string	"."
.LC6:
	.string	".."
	.text
	.globl	desDir
	.type	desDir, @function
desDir:
.LFB7:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$96, %rsp
	movq	%rdi, -56(%rbp)
	movl	%esi, -60(%rbp)
	movq	%rdx, -72(%rbp)
	movl	%ecx, %eax
	movq	%r8, -80(%rbp)
	movq	%r9, -88(%rbp)
	movb	%al, -64(%rbp)
	movb	$4, -9(%rbp)
	movl	$0, -4(%rbp)
	movl	$0, -8(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	call	opendir
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jne	.L17
	movl	$.LC4, %edi
	call	perror
	jmp	.L16
.L17:
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	cola_inic
	jmp	.L19
.L21:
	movq	-32(%rbp), %rax
	movzbl	18(%rax), %eax
	movzbl	%al, %edx
	movsbl	-9(%rbp), %eax
	cmpl	%eax, %edx
	jne	.L20
	movq	-32(%rbp), %rax
	addq	$19, %rax
	movl	$.LC5, %esi
	movq	%rax, %rdi
	call	strcmp
	testl	%eax, %eax
	je	.L19
	movq	-32(%rbp), %rax
	addq	$19, %rax
	movl	$.LC6, %esi
	movq	%rax, %rdi
	call	strcmp
	testl	%eax, %eax
	je	.L19
	movl	$208, %edi
	call	malloc
	movq	%rax, -40(%rbp)
	movq	-56(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	strcpy
	movq	-32(%rbp), %rax
	leaq	19(%rax), %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	strcat
	movq	-40(%rbp), %rax
	movq	$-1, -96(%rbp)
	movq	%rax, %rdx
	movl	$0, %eax
	movq	-96(%rbp), %rcx
	movq	%rdx, %rdi
	repnz scasb
	movq	%rcx, %rax
	notq	%rax
	leaq	-1(%rax), %rdx
	movq	-40(%rbp), %rax
	addq	%rdx, %rax
	movw	$47, (%rax)
	movq	-48(%rbp), %rax
	movq	-40(%rbp), %rdx
	movq	%rdx, %rsi
	movq	%rax, %rdi
	call	encolar
	addl	$1, -8(%rbp)
	jmp	.L19
.L20:
	addl	$1, -4(%rbp)
.L19:
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	readdir
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	jne	.L21
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	call	closedir
	movl	-60(%rbp), %ecx
	movl	-8(%rbp), %edx
	movl	-4(%rbp), %esi
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	call	impDir
	movq	-80(%rbp), %rax
	movl	(%rax), %edx
	movl	-8(%rbp), %eax
	addl	%eax, %edx
	movq	-80(%rbp), %rax
	movl	%edx, (%rax)
	movq	-88(%rbp), %rax
	movl	(%rax), %edx
	movl	-4(%rbp), %eax
	addl	%eax, %edx
	movq	-88(%rbp), %rax
	movl	%edx, (%rax)
	jmp	.L22
.L23:
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	desencolar
	movq	%rax, -40(%rbp)
	movzbl	-64(%rbp), %ecx
	movl	-60(%rbp), %eax
	leal	1(%rax), %esi
	movq	-88(%rbp), %r8
	movq	-80(%rbp), %rdi
	movq	-72(%rbp), %rdx
	movq	-40(%rbp), %rax
	movq	%r8, %r9
	movq	%rdi, %r8
	movq	%rax, %rdi
	call	desDir
	movq	-40(%rbp), %rax
	movq	%rax, %rdi
	call	free
.L22:
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	estaVacio
	testl	%eax, %eax
	je	.L23
	leaq	-48(%rbp), %rax
	movq	%rax, %rdi
	call	cola_finic
.L16:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE7:
	.size	desDir, .-desDir
	.ident	"GCC: (Debian 4.7.2-5) 4.7.2"
	.section	.note.GNU-stack,"",@progbits
